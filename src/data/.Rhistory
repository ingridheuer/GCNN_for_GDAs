install.packages("UniprotR")
# (1) ----
library(glue)
library(uniprotR)
# (1) ----
library(glue)
library(UniprotR)
install.packages("magick")
# (1) Libraries ----
library(data.table)
library(glue)
library(tidyverse)
# (2) Load data ----
data_external = "../../data/external/"
data_interim = "../../data/interim/"
kg_edges = fread(paste0(data_external,"primekg_edges.csv"), header=TRUE)
# (1) Libraries ----
library(data.table)
library(glue)
library(tidyverse)
# (2) Load data ----
data_external = "../../data/external/"
data_interim = "../../data/interim/"
kg_edges = fread(paste0(data_external,"primekg_edges.csv"), header=TRUE)
kg_d_features = fread(paste0(data_external, "primekg_disease_features.csv"), header=TRUE)
kg_nodes = fread(paste0(data_external,"primekg_nodes.csv"), header=TRUE)
mondo_cui_map = fread(paste0(data_interim,"mondo_cui_map.csv")) #mapeo que armé entre CUI y MONDO
hippie = fread(paste0(data_external,"hippie_current.txt"))
signor = fread(paste0(data_interim,"signor_mapped.csv")) #signor con mapeo que hice a entrez ID
disgenet_gdas = fread(paste0(data_external,"curated_gene_disease_associations.tsv"), header = TRUE)
disgenet_attr = fread(paste0(data_external,"disease_mappings_to_attributes.tsv"), header= TRUE)
setnames(
hippie,
old = colnames(hippie),
new = c(
"P1_NAME",
"P1_ENTREZ_ID",
"P2_NAME",
"P2_ENTREZ_ID",
"SCORE",
"EVIDENCE"
)
)
dt[,"source"] = source
source("~/Documents/tesis/gcnn_gdas/src/data/make_graph_dataset.R", echo=TRUE)
# (13) Exploro como quedó el dataset ----
glue("El dataset tiene {dim(graph_node_table)[1]} nodos y {dim(graph_edge_table)[1]} enlaces")
print("Nodos agrupados por tipo:")
table(graph_node_table$node_type)
print("Nodos agrupados por fuente: (conservé todos los de disgenet)")
table(graph_node_table$node_source)
dim(disgenet_node_table)
print("Enlaces agrupados por tipo de enlace:")
table(graph_edge_table$relation)
print("Enlaces agrupados por tipos de nodo")
table(graph_edge_table[,c("a_type","b_type")])
print("Enlaces agrupados por fuente: prioridad PPIs HIPPIE, es decir, saqué ppis de signor que ya estaban en hippie")
table(graph_edge_table$source)
dim(disgenet_gdas)
dim(hippie)
dim(signor)
dim(kg_edges[relation == "disease_disease",])
dim(kg_grouped_disease_nodes)
dim(kg_single_disease_nodes)
dim(kg_nodes[node_type == "disease"])
print("PrimeKG tiene nodos enfermedad que son grupos obtenidos con BERT, esos no los agregué")
glue("Además en el mapeo perdí {dim(kg_single_disease_nodes)[1] - dim(kg_single_disease_nodes_mapped)[1]} nodos porque no están en el mapeo CUI-mondo")
print("Enlaces de primekg que involucraban a nodos *grupo* de enfermedades")
idx_grouped = kg_grouped_disease_nodes[,node_index]
dim(kg_edges[relation == "disease_disease" & (x_index %in% idx_grouped | y_index %in% idx_grouped) ,])
print("Self loops")
dim(graph_edge_table[a_idx == b_idx])
print("Los self loops son de:")
table(graph_edge_table[a_idx == b_idx, source])
graph_edge_table[a_idx == b_idx & source == "primekg",source_idx]
print("Nodos que me quedaron sin enlaces")
nodos_desconectados = graph_node_table[!(node_idx %in% graph_edge_table[,a_idx]) & !(node_idx %in% graph_edge_table[,b_idx]),]
nodos_desconectados
print("Son todos nodos de primekg y 2 de signor, revisar esto")
table(nodos_desconectados[,node_source])
#veo un ejemplo de los que quedaron afuera
table(kg_edges[(x_index == 40792 | y_index == 40792), relation])
graph_node_table
graph_edge_table
tests(graph_node_table,graph_edge_table)
hippie
#(1) ----
library(glue)
library(data.table)
# (1) Libraries ----
library(data.table)
library(glue)
library(tidyverse)
# (2) Load data ----
data_external = "../../data/external/"
data_interim = "../../data/interim/"
kg_edges = fread(paste0(data_external,"primekg_edges.csv"), header=TRUE)
kg_d_features = fread(paste0(data_external, "primekg_disease_features.csv"), header=TRUE)
kg_nodes = fread(paste0(data_external,"primekg_nodes.csv"), header=TRUE)
mondo_cui_map = fread(paste0(data_interim,"mondo_cui_map.csv")) #mapeo que armé entre CUI y MONDO
hippie = fread(paste0(data_external,"hippie_current.txt"))
signor = fread(paste0(data_interim,"signor_mapped.csv")) #signor con mapeo que hice a entrez ID
disgenet_gdas = fread(paste0(data_external,"curated_gene_disease_associations.tsv"), header = TRUE)
disgenet_attr = fread(paste0(data_external,"disease_mappings_to_attributes.tsv"), header= TRUE)
setnames(
hippie,
old = colnames(hippie),
new = c(
"P1_NAME",
"P1_ENTREZ_ID",
"P2_NAME",
"P2_ENTREZ_ID",
"SCORE",
"EVIDENCE"
)
)
# (6) edges de hippie ----
hippie_edges <- tibble::rowid_to_column(hippie, "edge_index")
hippie_edge_table = make_edge_dt(hippie_edges[SCORE >0.73 ,c("P1_ENTREZ_ID","P2_ENTREZ_ID","edge_index")],"PPI","gene/protein","gene/protein","hippie")
hippie_edges[SCORE > 0.73,]
hippie_edges[SCORE >= 0.73,]
source("~/Documents/tesis/gcnn_gdas/src/data/make_graph_dataset.R", echo=TRUE)
data_processed = "../../data/processed/"
#Guardo los dataframes
write.csv(graph_node_table, file=paste0(data_processed,"graph_node_table.csv"))
write.csv(graph_edge_table, file=paste0(data_processed,"graph_edge_table.csv"))
